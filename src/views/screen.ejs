<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta http-equiv="Cache-Control" content="no-store" />
  <title><%= title %></title>
  <link rel="stylesheet" href="/screen.css" />
</head>
<body>
  <div class="screen-wrap">
    <header class="screen-header">
      <div class="brand">
        <span class="dot"></span>
        <h1>Chat & Warp Board</h1>
      </div>
      <div class="status">
        <span class="pill live">LIVE</span>
        <span id="clock" class="clock">--:--</span>
      </div>
    </header>

    <main class="screen-grid">
      <!-- คอลัมน์ซ้าย: แชท -->
      <section class="panel">
        <h2 class="panel-title">แชท</h2>
        <ul id="chatList" class="list">
          <li class="empty">ยังไม่มีข้อความแชท</li>
        </ul>
      </section>

      <!-- คอลัมน์ขวา: วาป -->
      <section class="panel">
        <h2 class="panel-title">วาป</h2>
        <ul id="warpList" class="list">
          <li class="empty">ยังไม่มีวาป</li>
        </ul>
      </section>
    </main>

    <footer class="screen-footer">
      <div class="ticker" id="ticker">
        <div class="ticker-track">
          <span>ยินดีต้อนรับสู่ร้านของเรา • โปรดงดใช้คำหยาบและสแปม • ขอบคุณที่ให้ความร่วมมือ</span>
          <span>ยินดีต้อนรับสู่ร้านของเรา • โปรดงดใช้คำหยาบและสแปม • ขอบคุณที่ให้ความร่วมมือ</span>
        </div>
      </div>
    </footer>
  </div>

  <script>
    // นาฬิกามุมขวาบน
    const elClock = document.getElementById("clock");
    function pad(n){ return n.toString().padStart(2,"0"); }
    function tick(){
      const d = new Date();
      elClock.textContent = `${pad(d.getHours())}:${pad(d.getMinutes())}`;
    }
    setInterval(tick, 1000); tick();
  </script>

  <!-- Socket.IO -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    // ฟัง event newMessage ที่ส่งมาจาก server
    socket.on("newMessage", (data) => {
      const chatList = document.getElementById("chatList");

      // ลบ placeholder ถ้ามี
      const empty = chatList.querySelector(".empty");
      if (empty) empty.remove();

      // เพิ่มข้อความใหม่
      const li = document.createElement("li");
      li.className = "item";
      li.innerHTML = `
        <span class="name">โต๊ะ ${data.tableId || "-"}</span>
        <span class="msg">${data.message}</span>
      `;
      chatList.appendChild(li);
    });

    // ✅ โหลดประวัติแชทล่าสุดตอนเปิด
    async function loadHistory(){
      try{
        const res = await fetch("/screen/history");
        const json = await res.json();
        if(!json.ok) return;
        const chatList = document.getElementById("chatList");
        chatList.innerHTML = ""; // ล้าง placeholder
        [...json.data].reverse().forEach(it => {
          const li = document.createElement("li");
          li.className = "item";
          li.innerHTML = `
            <span class="name">โต๊ะ ${it.tableId || "-"}</span>
            <span class="msg">${it.message}</span>
          `;
          chatList.appendChild(li);
        });
      }catch(e){ console.error(e); }
    }
    loadHistory();
  </script>
</body>
</html>
