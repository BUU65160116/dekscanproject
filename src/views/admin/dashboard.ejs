<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title><%= title %></title>
  <link rel="stylesheet" href="/admin.css" />
</head>
<body>
  <header>
    <h1>üìä ‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô | My Bar</h1>
  </header>

  <div class="wrap">
    <header class="header">
      <h1>Dashboard</h1>
      <div class="actions">
        <a class="soft" href="/screen" target="_blank" rel="noopener">‡πÄ‡∏õ‡∏¥‡∏î‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà</a>
        <form action="/admin/logout" method="POST" style="display:inline">
          <button type="submit" class="soft">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button>
        </form>
      </div>
    </header>

    <!-- ===== ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå ===== -->
    <section class="card">
      <div class="card-head">
        <h2>‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ)</h2>
        <div class="actions">
          <button id="btnRefresh">‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä</button>
          <button id="btnClear" class="danger">‡∏•‡πâ‡∏≤‡∏á‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</button>
        </div>
      </div>

      <table class="table" id="chatTable">
        <thead>
          <tr>
            <th style="width:90px">ID</th>
            <th style="width:200px">‡πÄ‡∏ß‡∏•‡∏≤</th>
            <th style="width:90px">‡πÇ‡∏ï‡πä‡∏∞</th>
            <th>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</th>
            <th style="width:120px">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
          </tr>
        </thead>
        <tbody id="chatBody">
          <tr><td colspan="5" class="muted">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</td></tr>
        </tbody>
      </table>
    </section>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const tbody = document.getElementById("chatBody");
    const btnRefresh = document.getElementById("btnRefresh");
    const btnClear = document.getElementById("btnClear");
    const ioClient = io();

    const esc = (s) => (s||"").toString().replace(/</g,"&lt;").replace(/>/g,"&gt;");
    const fmtTime = (s)=>{ try{ return new Date(s).toLocaleString(); }catch{ return s; } };

    function rowHtml(it){
      return `
        <tr id="row-${it.chatId}" data-id="${it.chatId}">
          <td>${it.chatId}</td>
          <td>${fmtTime(it.createdAt)}</td>
          <td>${it.tableId ?? "-"}</td>
          <td class="msg">${esc(it.message)}</td>
          <td>
            <button class="soft danger" data-del="${it.chatId}">‡∏•‡∏ö</button>
          </td>
        </tr>`;
    }

    async function loadData(){
      tbody.innerHTML = `<tr><td colspan="5" class="muted">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</td></tr>`;
      const res = await fetch("/admin/chat/data");
      const json = await res.json();
      if(!json.ok){ tbody.innerHTML = `<tr><td colspan="5" class="muted">‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</td></tr>`; return; }
      if(json.data.length === 0){ tbody.innerHTML = `<tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</td></tr>`; return; }
      tbody.innerHTML = json.data.map(rowHtml).join("");
    }

    // ‡∏•‡∏ö‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
    tbody.addEventListener("click", async (e) => {
      const btn = e.target.closest("[data-del]");
      if(!btn) return;
      const id = btn.getAttribute("data-del");
      if(!confirm(`‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° #${id}?`)) return;
      const res = await fetch(`/admin/chat/${id}/delete`, { method: "POST" });
      const json = await res.json();
      if(json.ok){
        const tr = document.getElementById(`row-${id}`);
        if(tr) tr.remove();
        if (!tbody.querySelector("tr")) {
          tbody.innerHTML = `<tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</td></tr>`;
        }
      }
    });

    // ‡∏•‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    btnClear.addEventListener("click", async () => {
      if(!confirm("‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î?")) return;
      const res = await fetch("/admin/chat/clear", { method: "POST" });
      const json = await res.json();
      if(json.ok){
        tbody.innerHTML = `<tr><td colspan="5" class="muted">‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß</td></tr>`;
      }
    });

    btnRefresh.addEventListener("click", loadData);

    // realtime: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
    ioClient.on("newMessage", (data) => {
      if(typeof data.chatId === "undefined") return;
      if (document.getElementById(`row-${data.chatId}`)) return;
      const row = {
        chatId: data.chatId,
        createdAt: data.createdAt || new Date().toISOString(),
        tableId: data.tableId ?? null,
        message: data.message || ""
      };
      tbody.insertAdjacentHTML("afterbegin", rowHtml(row));
    });

    // realtime: ‡∏•‡∏ö‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
    ioClient.on("deleteMessage", ({ chatId }) => {
      const tr = document.getElementById(`row-${chatId}`);
      if(tr) tr.remove();
      if (!tbody.querySelector("tr")) {
        tbody.innerHTML = `<tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</td></tr>`;
      }
    });

    // realtime: ‡∏•‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    ioClient.on("clearChat", () => {
      tbody.innerHTML = `<tr><td colspan="5" class="muted">‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß</td></tr>`;
    });

    loadData();
  </script>
</body>
</html>
