<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title><%= title %></title>
  <link rel="stylesheet" href="/admin.css" />
</head>
<body>
  <!-- =========================================================
       Header + actions
       ========================================================= -->
  <header>
    <h1>üìä ‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô | My Bar</h1>
  </header>

  <div class="wrap">
    <header class="header">
      <h1>Dashboard</h1>
      <div class="actions">
        <a class="soft" href="/screen" target="_blank" rel="noopener">‡πÄ‡∏õ‡∏¥‡∏î‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà</a>
        <form action="/admin/logout" method="POST" style="display:inline">
          <button type="submit" class="soft">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button>
        </form>
      </div>
    </header>

    <!-- =========================================================
         ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞ (‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Odoo)
         ========================================================= -->
    <section class="card">
      <div class="card-head">
        <h2>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞</h2>
        <div class="actions">
          <button id="unpaidRefresh">‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä</button>
        </div>
      </div>

      <!-- ‡∏ß‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ï‡πà‡∏≠‡πÇ‡∏ï‡πä‡∏∞ -->
      <div id="unpaidGrid" class="grid-2 gap-16">
        <div class="muted">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>
      </div>
    </section>

    <!-- =========================================================
         Modal: ‡πÉ‡∏™‡πà PIN ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡πÅ‡∏ó‡∏ô window.prompt)
         ========================================================= -->
    <dialog id="pinDialog">
      <form id="pinForm" method="dialog" class="card" style="min-width:280px">
        <h3>‡πÉ‡∏™‡πà PIN ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</h3>

        <!-- ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô a-z A-Z 0-9 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß 4‚Äì32 -->
        <input
          id="pinInput"
          type="password"
          required
          minlength="4"
          maxlength="32"
          pattern="[A-Za-z0-9]{4,32}"
          autocomplete="off"
          placeholder="‡∏Å‡∏£‡∏≠‡∏Å PIN"
        />

        <menu style="display:flex;gap:.5rem;justify-content:flex-end">
          <!-- ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏î Enter = ‚Äú‡∏ï‡∏Å‡∏•‡∏á‚Äù -->
          <button id="pinOk" value="ok" class="danger" type="submit" autofocus>‡∏ï‡∏Å‡∏•‡∏á</button>
          <!-- ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î required/pattern -->
          <button value="cancel" class="soft" type="submit" formnovalidate>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
        </menu>
      </form>
    </dialog>

    <!-- =========================================================
         ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
         ========================================================= -->
    <section class="card">
      <div class="card-head">
        <h2>‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ)</h2>
        <div class="actions">
          <button id="btnRefresh">‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä</button>
          <button id="btnClear" class="danger">‡∏•‡πâ‡∏≤‡∏á‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</button>
        </div>
      </div>

      <table class="table" id="chatTable">
        <thead>
          <tr>
            <th style="width:90px">ID</th>
            <th style="width:200px">‡πÄ‡∏ß‡∏•‡∏≤</th>
            <th style="width:90px">‡πÇ‡∏ï‡πä‡∏∞</th>
            <th>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</th>
            <th style="width:120px">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
          </tr>
        </thead>
        <tbody id="chatBody">
          <tr><td colspan="5" class="muted">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</td></tr>
        </tbody>
      </table>
    </section>
  </div>

  <!-- =========================================================
       Scripts
       ========================================================= -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    // ---------- Helpers ----------
    const esc     = (s) => (s || '').toString().replace(/</g, '&lt;').replace(/>/g, '&gt;');
    const fmtTime = (s) => { try { return new Date(s).toLocaleString(); } catch { return s; } };
    const fmtTHB  = (n) => {
      try { return new Intl.NumberFormat('th-TH', { style:'currency', currency:'THB' }).format(n || 0); }
      catch { return (n || 0).toFixed(2) + '‡∏ø'; }
    };

    // =========================================================
    // 1) ‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
    // =========================================================
    const ioClient  = io();
    const tbody     = document.getElementById('chatBody');
    const btnRefresh= document.getElementById('btnRefresh');
    const btnClear  = document.getElementById('btnClear');

    function rowHtml(it) {
      return `
        <tr id="row-${it.chatId}" data-id="${it.chatId}">
          <td>${it.chatId}</td>
          <td>${fmtTime(it.createdAt)}</td>
          <td>${it.tableId ?? '-'}</td>
          <td class="msg">${esc(it.message)}</td>
          <td><button class="soft danger" data-del="${it.chatId}">‡∏•‡∏ö</button></td>
        </tr>`;
    }

    async function loadData() {
      tbody.innerHTML = `<tr><td colspan="5" class="muted">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</td></tr>`;
      const res = await fetch('/admin/chat/data');
      const json = await res.json();
      if (!json.ok) {
        tbody.innerHTML = `<tr><td colspan="5" class="muted">‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</td></tr>`;
        return;
      }
      if (!json.data.length) {
        tbody.innerHTML = `<tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</td></tr>`;
        return;
      }
      tbody.innerHTML = json.data.map(rowHtml).join('');
    }

    // ‡∏•‡∏ö‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
    tbody.addEventListener('click', async (e) => {
      const btn = e.target.closest('[data-del]');
      if (!btn) return;
      const id = btn.getAttribute('data-del');
      if (!confirm(`‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° #${id}?`)) return;

      const res = await fetch(`/admin/chat/${id}/delete`, { method: 'POST' });
      const json = await res.json();
      if (json.ok) {
        document.getElementById(`row-${id}`)?.remove();
        if (!tbody.querySelector('tr')) {
          tbody.innerHTML = `<tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</td></tr>`;
        }
      }
    });

    // ‡∏•‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    btnClear.addEventListener('click', async () => {
      if (!confirm('‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î?')) return;
      const res = await fetch('/admin/chat/clear', { method: 'POST' });
      const json = await res.json();
      if (json.ok) {
        tbody.innerHTML = `<tr><td colspan="5" class="muted">‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß</td></tr>`;
      }
    });

    btnRefresh.addEventListener('click', loadData);

    // realtime events
    ioClient.on('newMessage', (data) => {
      if (typeof data.chatId === 'undefined') return;
      if (document.getElementById(`row-${data.chatId}`)) return;
      const row = {
        chatId: data.chatId,
        createdAt: data.createdAt || new Date().toISOString(),
        tableId: data.tableId ?? null,
        message: data.message || ''
      };
      tbody.insertAdjacentHTML('afterbegin', rowHtml(row));
    });

    ioClient.on('deleteMessage', ({ chatId }) => {
      document.getElementById(`row-${chatId}`)?.remove();
      if (!tbody.querySelector('tr')) {
        tbody.innerHTML = `<tr><td colspan="5" class="muted">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</td></tr>`;
      }
    });

    ioClient.on('clearChat', () => {
      tbody.innerHTML = `<tr><td colspan="5" class="muted">‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß</td></tr>`;
    });

    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
    loadData();

    // =========================================================
    // 2) ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞ + ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ ‚Äú‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‚Äù (‡∏ï‡∏£‡∏ß‡∏à PIN ‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå)
    // =========================================================
    const unpaidGrid        = document.getElementById('unpaidGrid');
    const unpaidRefreshBtn  = document.getElementById('unpaidRefresh');

    function unpaidCardHtml(row) {
      const table = row.tableNo ?? '-';
      return `
        <div class="card soft" data-order-id="${row.orderId}">
          <div class="card-head"><strong>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞</strong></div>
          <table class="table compact">
            <thead><tr><th>‡πÇ‡∏ï‡πä‡∏∞</th><th>‡∏¢‡∏≠‡∏î</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th></tr></thead>
            <tbody>
              <tr>
                <td>${table}</td>
                <td>${fmtTHB(row.amountDue)}</td>
                <td>unpaid</td>
              </tr>
            </tbody>
          </table>
          <div class="actions">
            <button class="soft btnContact" data-order-id="${row.orderId}" data-table="${table}">
              ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
            </button>
          </div>
        </div>`;
    }

    async function loadUnpaid() {
      unpaidGrid.innerHTML = `<div class="muted">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>`;
      try {
        const r = await fetch('/admin/unpaid/data');
        const j = await r.json();

        if (!j.ok) throw new Error(j.error || '‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        if (!j.data || !j.data.length) {
          unpaidGrid.innerHTML = `<div class="muted">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</div>`;
          return;
        }
        unpaidGrid.innerHTML = j.data.map(unpaidCardHtml).join('');
      } catch (err) {
        unpaidGrid.innerHTML = `<div class="muted">‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message || err}</div>`;
      }
    }

    // ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
    unpaidRefreshBtn?.addEventListener('click', loadUnpaid);

    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å)
    loadUnpaid();

    // ------ Modal PIN + ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ------
    const pinDialog = document.getElementById('pinDialog');
    const pinForm   = document.getElementById('pinForm');
    const pinInput  = document.getElementById('pinInput');

    // orderId ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
    let currentOrderId = null;

    // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° ‚Äú‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‚Äù -> ‡πÄ‡∏õ‡∏¥‡∏î modal
    document.addEventListener('click', (e) => {
      const btn = e.target.closest('.btnContact');
      if (!btn) return;

      currentOrderId = btn.dataset.orderId;
      pinInput.value = '';
      pinDialog.showModal();
      pinInput.focus();
    });

    // ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏° dialog (‡∏Å‡∏î Enter ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°)
    pinForm.addEventListener('submit', (e) => {
      e.preventDefault(); // ‡∏Å‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° flow
      const action = e.submitter?.value; // "ok" ‡∏´‡∏£‡∏∑‡∏≠ "cancel"

      if (action === 'cancel') {
        pinDialog.close();
        return;
      }

      // action === "ok"
      if (!pinForm.reportValidity()) return; // required/pattern

      const pin = pinInput.value.trim();
      if (!currentOrderId) { pinDialog.close(); return; }

      openContact(currentOrderId, pin); // ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ö‡∏ö POST
      pinDialog.close();
    });

    // ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏î‡πâ‡∏ß‡∏¢ POST (user gesture -> ‡πÑ‡∏°‡πà‡πÇ‡∏î‡∏ô block)
    function openContact(orderId, pin) {
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '/admin/unpaid/contact/view';
      form.target = '_blank';
      form.innerHTML = `
        <input type="hidden" name="orderId" value="${orderId}" />
        <input type="hidden" name="pin"     value="${pin}" />
      `;
      document.body.appendChild(form);
      form.submit();
      form.remove();
    }
  </script>
</body>
</html>
